// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWelcomeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnLogin;

  @NonNull
  public final Button btnManager;

  @NonNull
  public final Button btnSignup;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final TextView txtDetails;

  @NonNull
  public final TextView txtWelcome;

  private ActivityWelcomeBinding(@NonNull LinearLayout rootView, @NonNull Button btnLogin,
      @NonNull Button btnManager, @NonNull Button btnSignup, @NonNull ImageView imageView3,
      @NonNull TextView txtDetails, @NonNull TextView txtWelcome) {
    this.rootView = rootView;
    this.btnLogin = btnLogin;
    this.btnManager = btnManager;
    this.btnSignup = btnSignup;
    this.imageView3 = imageView3;
    this.txtDetails = txtDetails;
    this.txtWelcome = txtWelcome;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWelcomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWelcomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_welcome, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWelcomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnLogin;
      Button btnLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.btnManager;
      Button btnManager = ViewBindings.findChildViewById(rootView, id);
      if (btnManager == null) {
        break missingId;
      }

      id = R.id.btnSignup;
      Button btnSignup = ViewBindings.findChildViewById(rootView, id);
      if (btnSignup == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.txtDetails;
      TextView txtDetails = ViewBindings.findChildViewById(rootView, id);
      if (txtDetails == null) {
        break missingId;
      }

      id = R.id.txtWelcome;
      TextView txtWelcome = ViewBindings.findChildViewById(rootView, id);
      if (txtWelcome == null) {
        break missingId;
      }

      return new ActivityWelcomeBinding((LinearLayout) rootView, btnLogin, btnManager, btnSignup,
          imageView3, txtDetails, txtWelcome);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
